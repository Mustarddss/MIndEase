package com.example.mindease;

import android.os.Bundle;
import android.view.View;
import android.widget.ArrayAdapter;
import android.widget.AutoCompleteTextView;
import android.widget.Button;
import android.widget.EditText;
import android.widget.MultiAutoCompleteTextView;
import android.widget.Toast;
import androidx.appcompat.app.AppCompatActivity;

public class MainActivity extends AppCompatActivity {

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        // Initialize dropdown options
        String[] ageGroups = {"18-24", "25-34", "35-44", "45-54", "55+"};
        String[] genders = {"Male", "Female", "Non-binary", "Prefer not to say"};
        String[] languages = {"English", "Spanish", "French", "Mandarin", "Other"};
        String[] therapistGenders = {"No preference", "Male", "Female"};
        String[] mentalHealthConcerns = {"Anxiety", "Depression", "Stress", "Relationship issues", "Other"};
        String[] severityLevels = {"Mild", "Moderate", "Severe"};
        String[] therapistConsulted = {"Yes", "No"};
        String[] supportTypes = {"Individual sessions", "Group therapy", "Self-help resources"};
        String[] sessionFrequencies = {"Weekly", "Bi-weekly", "Monthly"};
        String[] availabilityTimes = {"Morning", "Afternoon", "Evening", "Weekends"};
        String[] groupSessionInterest = {"Yes", "No"};
        String[] groupTopics = {"Stress management", "Relationship support", "Career guidance", "Parenting", "Other"};

        // Setup dropdowns
        setupDropdown(R.id.autoCompleteAgeGroup, ageGroups);
        setupDropdown(R.id.autoCompleteGender, genders);
        setupDropdown(R.id.autoCompleteLanguage, languages);
        setupDropdown(R.id.autoCompleteTherapistGender, therapistGenders);
        setupDropdown(R.id.autoCompleteMentalHealthConcern, mentalHealthConcerns);
        setupDropdown(R.id.autoCompleteSevereMentalHealth, severityLevels);
        setupDropdown(R.id.autoCompleteTherapistConsult, therapistConsulted);
        setupDropdown(R.id.autoCompleteTypeSupport, supportTypes);
        setupDropdown(R.id.autoCompleteSessionsAttended, sessionFrequencies);
        setupMultiSelectDropdown(R.id.autoCompleteMostAvailable, availabilityTimes);
        setupDropdown(R.id.autoCompleteInterestJoining, groupSessionInterest);
        setupDropdown(R.id.autoCompleteTopicsInterest, groupTopics);

        // Handle Continue button click
        Button continueButton = findViewById(R.id.button_continue);
        continueButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                // Validate all required fields
                if (!validateDropdown(R.id.autoCompleteAgeGroup, "Age Group") ||
                        !validateDropdown(R.id.autoCompleteGender, "Gender") ||
                        !validateDropdown(R.id.autoCompleteLanguage, "Language") ||
                        !validateDropdown(R.id.autoCompleteTherapistGender, "Therapist Gender") ||
                        !validateDropdown(R.id.autoCompleteMentalHealthConcern, "Mental Health Concern") ||
                        !validateDropdown(R.id.autoCompleteSevereMentalHealth, "Severity") ||
                        !validateDropdown(R.id.autoCompleteTherapistConsult, "Consulted Therapist") ||
                        !validateDropdown(R.id.autoCompleteTypeSupport, "Support Type") ||
                        !validateDropdown(R.id.autoCompleteSessionsAttended, "Session Frequency") ||
                        !validateDropdown(R.id.autoCompleteInterestJoining, "Group Interest") ||
                        !validateDropdown(R.id.autoCompleteTopicsInterest, "Group Topics")) {
                    return; // Stop processing if validation fails
                }

                // Collect data
                String ageGroup = getDropdownValue(R.id.autoCompleteAgeGroup);
                String gender = getDropdownValue(R.id.autoCompleteGender);
                String language = getDropdownValue(R.id.autoCompleteLanguage);
                String therapistGender = getDropdownValue(R.id.autoCompleteTherapistGender);
                String mentalHealthConcern = getDropdownValue(R.id.autoCompleteMentalHealthConcern);
                String severity = getDropdownValue(R.id.autoCompleteSevereMentalHealth);
                String consultedTherapist = getDropdownValue(R.id.autoCompleteTherapistConsult);
                String supportType = getDropdownValue(R.id.autoCompleteTypeSupport);
                String sessionFrequency = getDropdownValue(R.id.autoCompleteSessionsAttended);
                String availability = getMultiSelectDropdownValue(R.id.autoCompleteMostAvailable);
                String groupInterest = getDropdownValue(R.id.autoCompleteInterestJoining);
                String groupTopics = getDropdownValue(R.id.autoCompleteTopicsInterest);

                // Retrieve open-ended answer
                EditText goalsEditText = findViewById(R.id.editTextGoals);
                String therapyGoals = goalsEditText.getText().toString();

                // Display results
                String message = "Age Group: " + ageGroup + "\n" +
                        "Gender: " + gender + "\n" +
                        "Language: " + language + "\n" +
                        "Therapist Gender: " + therapistGender + "\n" +
                        "Mental Health Concern: " + mentalHealthConcern + "\n" +
                        "Severity: " + severity + "\n" +
                        "Consulted Therapist: " + consultedTherapist + "\n" +
                        "Support Type: " + supportType + "\n" +
                        "Session Frequency: " + sessionFrequency + "\n" +
                        "Availability: " + availability + "\n" +
                        "Group Interest: " + groupInterest + "\n" +
                        "Group Topics: " + groupTopics + "\n" +
                        "Therapy Goals: " + therapyGoals;

                Toast.makeText(MainActivity.this, message, Toast.LENGTH_LONG).show();
            }
        });
    }

    private void setupMultiSelectDropdown(int viewId, String[] options) {
        MultiAutoCompleteTextView dropdown = findViewById(viewId);
        ArrayAdapter<String> adapter = new ArrayAdapter<>(this, android.R.layout.simple_list_item_multiple_choice, options);
        dropdown.setAdapter(adapter);
        dropdown.setTokenizer(new MultiAutoCompleteTextView.CommaTokenizer());

        dropdown.setOnItemClickListener((parent, view, position, id) -> {
            String selectedText = adapter.getItem(position); // Get selected item
            String currentText = dropdown.getText().toString();

            // Split the text into individual selections
            String[] selectedItems = currentText.split(",\\s*");

            // Check for duplicates
            int count = 0;
            for (String item : selectedItems) {
                if (item.trim().equals(selectedText)) {
                    count++;
                }
            }

            // If the item is already selected, remove the duplicate
            if (count > 1) {
                dropdown.setText(removeLastOccurrence(currentText, selectedText) + ", ");
                dropdown.setSelection(dropdown.getText().length());
                Toast.makeText(this, selectedText + " is already selected!", Toast.LENGTH_SHORT).show();
            }
        });
    }

    private String removeLastOccurrence(String text, String toRemove) {
        int lastIndex = text.lastIndexOf(toRemove);
        if (lastIndex == -1) {
            return text;
        }
        return text.substring(0, lastIndex) + text.substring(lastIndex + toRemove.length()).trim();
    }

    private String getMultiSelectDropdownValue(int viewId) {
        MultiAutoCompleteTextView dropdown = findViewById(viewId);
        return dropdown.getText().toString().trim();
    }

    private void setupDropdown(int viewId, String[] options) {
        AutoCompleteTextView dropdown = findViewById(viewId);
        ArrayAdapter<String> adapter = new ArrayAdapter<>(this, android.R.layout.simple_dropdown_item_1line, options);
        dropdown.setAdapter(adapter);
    }

    private String getDropdownValue(int viewId) {
        AutoCompleteTextView dropdown = findViewById(viewId);
        return dropdown.getText().toString();
    }

    private boolean validateDropdown(int viewId, String fieldName) {
        AutoCompleteTextView dropdown = findViewById(viewId);
        String value = dropdown.getText().toString().trim();
        if (value.isEmpty()) {
            dropdown.setError(fieldName + " is required.");
            dropdown.requestFocus();
            return false;
        }
        return true;
    }

    private boolean validateEditText(int viewId, String fieldName) {
        EditText editText = findViewById(viewId);
        String value = editText.getText().toString().trim();
        if (value.isEmpty()) {
            editText.setError(fieldName + " is required.");
            editText.requestFocus();
            return false;
        }
        return true;
    }
}
